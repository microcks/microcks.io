# This link checks Microcks website links in Markdown HTML files once per day
# from: https://github.com/lycheeverse/lychee-action
# link checker used is 'lychee': https://github.com/lycheeverse/lychee

name: Link Check

on:
  # This event will only trigger a workflow run if the workflow file is on the default branch.
  repository_dispatch:
  workflow_dispatch:
  # Run every day at 23h42
#  schedule:
#    - cron: "42 23 * * *"

jobs:
  linkChecker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
  
      # # Step to set up Hugo
      # - name: Setup Hugo
      # uses: peaceiris/actions-hugo@v3
      # with:
      #   # Always use the latest version of Hugo, in case of issue with the latest version, 
      #   # you can specify a specific version using '0.125.5'
      #   hugo-version: 'latest'
      #   # Set the extended option to true to install the extended version of Hugo, mandatory for Microcks website
      #   extended: true

      # # Step to build the site
      # - name: Build site
      # run: hugo --minify
      # # Capture output and error code
      # continue-on-error: true
      # id: build

      # # Check if build failed
      # - name: Check build status
      # run: |
      #   if [ ${{ steps.build.outcome }} != 'success' ]; then
      #     echo "::error::Hugo build failed, blocking commit..."
      #     exit 1
      #   fi

      - name: Link Checker
        id: lychee
        uses: lycheeverse/lychee-action@v1
        with:
          # Check all markdown and html files in repo (default)
          #args: --base microcks.io/public --verbose --no-progress './**/*.md' './**/*.html'
          # Exclude all files except those starting with http:// or https://
          args: --exclude .* --include ['^https://', '^http://'] --base public --verbose --no-progress './**/*.md' './**/*.html'
          # Use markdown as output format
          format: markdown
          # Use different output file path
          output: ./link-checker/report.md
          # Use a custom GitHub token, which 
          token: ${{ secrets.CUSTOM_TOKEN }}
          # Don't fail action on broken links
          fail: false
          
 #     - name: Create Issue From File
 #       if: env.lychee_exit_code != 0
 #       uses: peter-evans/create-issue-from-file@v4
 #       with:
 #         title: Link Checker Report
 #         content-filepath: ./lychee/out.md
 #         labels: report, automated issue

